<?php

namespace App\Model;

use App\Constants\Services;
use Phalcon\Mvc\Model;

/**
 * UserDepartment
 *
 * @package App\Model
 * @autogenerated by Phalcon Developer Tools
 * @date 2018-08-02, 17:03:04
 * @method Department getDepartments
 * @method User getUser
 */
class UserDepartment extends Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(type="integer", length=11, nullable=false)
     */
    public $id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $department_id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $user_id;

    /**
     * Initialize method for model.
     */
    public function initialize(): void
    {
        $this->setSchema($this->getDI()->get(Services::CONFIG)->database->dbname);
        $this->setSource('user_department');
        $this->belongsTo('department_id', Department::class, 'id', ['alias' => 'Departments']);
        $this->belongsTo('user_id', User::class, 'id', ['alias' => 'User']);
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource(): string
    {
        return 'user_department';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return UserDepartment[]|UserDepartment|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return UserDepartment|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap(): array
    {
        return  [
                'id' => 'id',
                'department_id' => 'department_id',
                'user_id' => 'user_id'
            ];
    }
}
